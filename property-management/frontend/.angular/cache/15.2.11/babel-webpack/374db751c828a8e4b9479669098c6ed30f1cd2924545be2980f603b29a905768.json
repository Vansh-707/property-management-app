{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AddUnitComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const property_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", property_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", property_r5.name, \" \");\n  }\n}\nfunction AddUnitComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Property is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUnitComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const floor_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", floor_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Floor \", floor_r6.floor_number, \" \");\n  }\n}\nfunction AddUnitComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Floor is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUnitComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Unit number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUnitComponent_div_27_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Unit number can only contain letters, numbers, underscores, and dashes\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddUnitComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, AddUnitComponent_div_27_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, AddUnitComponent_div_27_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.unitForm.get(\"unitNumber\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r4.unitForm.get(\"unitNumber\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\nexport let AddUnitComponent = /*#__PURE__*/(() => {\n  class AddUnitComponent {\n    constructor(fb, apiService, router) {\n      this.fb = fb;\n      this.apiService = apiService;\n      this.router = router;\n      this.properties = [];\n      this.floors = [];\n      this.isLoading = false;\n      this.unitForm = this.fb.group({\n        propertyId: ['', Validators.required],\n        floorId: ['', Validators.required],\n        unitNumber: ['', [Validators.required, Validators.pattern(/^[A-Za-z0-9_-]+$/)]] // Allow alphanumeric, underscores, and dashes\n      });\n    }\n\n    ngOnInit() {\n      this.loadProperties();\n    }\n    loadProperties() {\n      this.apiService.getProperties().subscribe({\n        next: data => {\n          this.properties = data;\n          if (this.properties.length === 0) {\n            console.warn('No properties found. Please add properties first.');\n          }\n        },\n        error: error => console.error('Error fetching properties:', error)\n      });\n    }\n    onPropertySelect() {\n      const propertyId = this.unitForm.get('propertyId')?.value;\n      if (propertyId) {\n        this.apiService.getPropertyDetails(propertyId).subscribe({\n          next: data => {\n            this.floors = data.floors || [];\n            if (this.floors.length === 0) {\n              console.warn('No floors found for the selected property. Please add floors first.');\n            }\n            this.unitForm.patchValue({\n              floorId: ''\n            });\n          },\n          error: error => console.error('Error fetching floors:', error)\n        });\n      } else {\n        this.floors = [];\n        this.unitForm.patchValue({\n          floorId: ''\n        });\n      }\n    }\n    onSubmit() {\n      if (this.unitForm.valid) {\n        this.isLoading = true;\n        const {\n          propertyId,\n          floorId,\n          unitNumber\n        } = this.unitForm.value;\n        if (!propertyId) {\n          console.error('Invalid propertyId:', propertyId);\n          this.isLoading = false;\n          return;\n        }\n        this.apiService.createUnit({\n          floorId,\n          unitNumber\n        }).subscribe({\n          next: () => {\n            this.unitForm.reset();\n            this.isLoading = false;\n            this.router.navigate(['/properties', propertyId]);\n          },\n          error: error => {\n            console.error('Error:', error);\n            this.isLoading = false;\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function AddUnitComponent_Factory(t) {\n        return new (t || AddUnitComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddUnitComponent,\n        selectors: [[\"app-add-unit\"]],\n        decls: 30,\n        vars: 8,\n        consts: [[1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"propertyId\", 1, \"form-select\", 3, \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"formControlName\", \"floorId\", 1, \"form-select\"], [\"type\", \"text\", \"formControlName\", \"unitNumber\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [3, \"value\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n        template: function AddUnitComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n            i0.ɵɵtext(4, \"Add New Unit\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function AddUnitComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n            i0.ɵɵtext(9, \"Select Property\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"select\", 7);\n            i0.ɵɵlistener(\"change\", function AddUnitComponent_Template_select_change_10_listener() {\n              return ctx.onPropertySelect();\n            });\n            i0.ɵɵelementStart(11, \"option\", 8);\n            i0.ɵɵtext(12, \"Select a property\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(13, AddUnitComponent_option_13_Template, 2, 2, \"option\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(14, AddUnitComponent_div_14_Template, 2, 0, \"div\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 6);\n            i0.ɵɵtext(17, \"Select Floor\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"select\", 11)(19, \"option\", 8);\n            i0.ɵɵtext(20, \"Select a floor\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(21, AddUnitComponent_option_21_Template, 2, 2, \"option\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(22, AddUnitComponent_div_22_Template, 2, 0, \"div\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"div\", 5)(24, \"label\", 6);\n            i0.ɵɵtext(25, \"Unit Number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(26, \"input\", 12);\n            i0.ɵɵtemplate(27, AddUnitComponent_div_27_Template, 3, 2, \"div\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"button\", 13);\n            i0.ɵɵtext(29);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            let tmp_2_0;\n            let tmp_4_0;\n            let tmp_5_0;\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"formGroup\", ctx.unitForm);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.properties);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.unitForm.get(\"propertyId\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.unitForm.get(\"propertyId\")) == null ? null : tmp_2_0.invalid));\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.floors);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.unitForm.get(\"floorId\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.unitForm.get(\"floorId\")) == null ? null : tmp_4_0.invalid));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.unitForm.get(\"unitNumber\")) == null ? null : tmp_5_0.touched) && ((tmp_5_0 = ctx.unitForm.get(\"unitNumber\")) == null ? null : tmp_5_0.invalid));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.unitForm.invalid || ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Adding...\" : \"Add Unit\", \" \");\n          }\n        },\n        dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return AddUnitComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}