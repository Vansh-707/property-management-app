{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginDialogComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" User ID is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginDialogComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginDialogComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.errorMessage);\n  }\n}\nexport let LoginDialogComponent = /*#__PURE__*/(() => {\n  class LoginDialogComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.visible = false;\n      this.isLoading = false;\n      this.errorMessage = null;\n      this.resolveRef = null;\n      this.loginForm = this.fb.group({\n        userId: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    show() {\n      this.visible = true;\n      return new Promise(resolve => {\n        this.resolveRef = resolve;\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        this.isLoading = true;\n        const {\n          userId,\n          password\n        } = this.loginForm.value;\n        this.authService.login(userId, password).subscribe({\n          next: () => {\n            this.isLoading = false;\n            this.router.navigate(['/units/available']); // Navigate to a default page after login\n          },\n\n          error: error => {\n            console.error('Login error:', error);\n            this.isLoading = false;\n            if (error.status === 404) {\n              this.errorMessage = 'no user found';\n            } else if (error.status === 401) {\n              this.errorMessage = 'incorrect login';\n            } else {\n              this.errorMessage = 'An unexpected error occurred';\n            }\n          }\n        });\n      }\n    }\n    cancel() {\n      this.visible = false;\n      this.resolveRef?.(false);\n    }\n    static {\n      this.ɵfac = function LoginDialogComponent_Factory(t) {\n        return new (t || LoginDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginDialogComponent,\n        selectors: [[\"app-login-dialog\"]],\n        decls: 23,\n        vars: 6,\n        consts: [[1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"userId\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"mt-3\"], [\"routerLink\", \"/register\"], [\"class\", \"text-danger mt-3\", 4, \"ngIf\"], [1, \"text-danger\"], [1, \"text-danger\", \"mt-3\"]],\n        template: function LoginDialogComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n            i0.ɵɵtext(4, \"Login\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"form\", 5);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginDialogComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n            i0.ɵɵtext(9, \"User ID\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(10, \"input\", 8);\n            i0.ɵɵtemplate(11, LoginDialogComponent_div_11_Template, 2, 0, \"div\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 7);\n            i0.ɵɵtext(14, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 10);\n            i0.ɵɵtemplate(16, LoginDialogComponent_div_16_Template, 2, 0, \"div\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"button\", 11);\n            i0.ɵɵtext(18);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"div\", 12)(20, \"a\", 13);\n            i0.ɵɵtext(21, \"Register\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(22, LoginDialogComponent_div_22_Template, 2, 1, \"div\", 14);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"userId\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.loginForm.get(\"userId\")) == null ? null : tmp_1_0.invalid));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Logging in...\" : \"Login\", \" \");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          }\n        },\n        dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return LoginDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}