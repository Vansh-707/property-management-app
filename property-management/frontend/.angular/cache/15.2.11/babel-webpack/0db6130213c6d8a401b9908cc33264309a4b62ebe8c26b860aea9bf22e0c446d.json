{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AddPropertyComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPropertyComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name can only contain letters, numbers, and spaces (max 255 characters)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPropertyComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AddPropertyComponent_div_11_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, AddPropertyComponent_div_11_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.propertyForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.propertyForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\nfunction AddPropertyComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Address is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPropertyComponent_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Address can only contain letters, numbers, commas, and spaces\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddPropertyComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, AddPropertyComponent_div_16_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, AddPropertyComponent_div_16_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.propertyForm.get(\"address\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.propertyForm.get(\"address\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"pattern\"]);\n  }\n}\nexport let AddPropertyComponent = /*#__PURE__*/(() => {\n  class AddPropertyComponent {\n    constructor(fb, apiService, router) {\n      this.fb = fb;\n      this.apiService = apiService;\n      this.router = router;\n      this.isLoading = false;\n      this.propertyForm = this.fb.group({\n        name: ['', [Validators.required, Validators.pattern(/^[A-Za-z0-9 ]{1,255}$/)]],\n        address: ['', [Validators.required, Validators.pattern(/^[A-Za-z0-9, ]+$/)]] // Alphanumeric, commas, and spaces\n      });\n    }\n\n    onSubmit() {\n      if (this.propertyForm.valid) {\n        this.isLoading = true;\n        this.apiService.createProperty(this.propertyForm.value).subscribe({\n          next: () => {\n            this.propertyForm.reset();\n            this.isLoading = false;\n            this.router.navigate(['/units/available']);\n          },\n          error: error => {\n            console.error('Error:', error);\n            this.isLoading = false;\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function AddPropertyComponent_Factory(t) {\n        return new (t || AddPropertyComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddPropertyComponent,\n        selectors: [[\"app-add-property\"]],\n        decls: 19,\n        vars: 5,\n        consts: [[1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"address\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n        template: function AddPropertyComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n            i0.ɵɵtext(4, \"Add New Property\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n            i0.ɵɵlistener(\"ngSubmit\", function AddPropertyComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n            i0.ɵɵtext(9, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(10, \"input\", 7);\n            i0.ɵɵtemplate(11, AddPropertyComponent_div_11_Template, 3, 2, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 6);\n            i0.ɵɵtext(14, \"Address\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 9);\n            i0.ɵɵtemplate(16, AddPropertyComponent_div_16_Template, 3, 2, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"button\", 10);\n            i0.ɵɵtext(18);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"formGroup\", ctx.propertyForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.propertyForm.get(\"name\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.propertyForm.get(\"name\")) == null ? null : tmp_1_0.invalid));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.propertyForm.get(\"address\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.propertyForm.get(\"address\")) == null ? null : tmp_2_0.invalid));\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.propertyForm.invalid || ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Adding...\" : \"Add Property\", \" \");\n          }\n        },\n        dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return AddPropertyComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}